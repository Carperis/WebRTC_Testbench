import binascii
import dpkt

hex_stream = "4500043a262a00004011736a0a00008c11f9c09a40090d990426ee0d6000041a015bf81901f81a01000390643011000369d892e7f819421800010000000092c9e5a747acf9b023c7a5d73f0968af9a1fc856c51c89bb95baa26c85d7fd8c9997440f14af76fba13fa9568d6a6d859f5fe5f9ee34130bd49c842d74df5616f65d05187645424a5bf7bb6dbb3f9ead6d77e5f2ce5af3d5034f79b582f8d3604b23b2eaf3e4c975b16eab9c553eda73753aea8bec6b6eebadd0541ee2cc7bb831eb568c3f5a0eec2a55db109c024c36a38399cfe52672b177091eb0d66cfad7f12c6f4dfbbedd44c6bb1d09c120dadbf6c3a48a8c03af1be9ed2ebcfa1edd3d808dca02f27f5b8b26de69985d757bcef2c525f6b0565b2adfd4080c8d674d463eaacaddd3bc94a03753a31b14a36eb2d1d95632e6f7e97edef35a923b3d4eb6cf16687b17dd7e0a4e3ecb7767b0a4d8db776a2086d305c77886a1895430c936fbc1862668b281ac73b167757b5d071ed071e21902e1a02b1634ca233cb348efc78e0c3ae461cd87d4c715ccc8c6673720851b455150e9f39cfe60dfbedc6f54722cf1acfbb8b77661bcd1dd764291e5a09d83954e9b8a984184d34963e0c3fd4f367ac937b8480876f96942d100ccba46b23d434cf7df7a90dd13a40fe6a4521805388bf75f1c577348c9cea47db148a28c8dd4d854a82ca01b927eed78be70d33c4b1f18a6a3c64a463b8275f000f93e276d48186574c1de99ee147cbc406dd5037d11deea9a74a17aae93534677742c3032399098def546a045385111cb94191ec3d7d211182ec8eb999ba9bf84e89d844d45ab953b007968b9f2b35d5a68b9db1b951f961a0d0a5f1f0825447259c1abb651604f0d87cbb21d44f18cf4bffd290babd28f093a27c93ce9e42729261800128e525d6589b98a19946a68d1a2b2fd7c6cd43a7f32069ed9917230af8bc84f2079b80ade38b3354dfb7750ce3871a421a45f8a76e062282065a69a118865c23bc297430be7e8b586f07b486ad08b1adb31ded3d071a53d519f1256232329c4df6ca046e135913a5f4266b500688ce13082076800e9732021df7802cb637782dd359f3ac93b5a1104a5e2cdbb9f1a93d4e685ef7d459284e0ad3f9ff3f6f55f155ccbdb624bf26053b6441adb44570acd3f88ca3ecd96d11d8bb43eea93aa02011acd0ac8223473798a334d12ff581d35851f2ea5a8bb76d40bef5fd61b6a854869e36e0fa4a778967215eeddcc8ab6a5c42a0e24302f1a7a152c6debe3bdb3e56b794a1a8a8a758419362219bc001e3e024d8721a8df2953e97d7ea6ac493e2eba2ec27c9e88463aca3ace2eab9073bf530ef67db33342fbe795dc1967509b49f6baf69707fceb5165508edddc158ce40dd04749f56f0a275411bf9893c640fc7464f2c8c00f176a3392119437b9659e355dd54edc73236d7c8583ecd27c1f54c2b6dcd1ebbad2845ec10cd9f9f4f725ed19653987940bb6eada3d442595d8047010320c0b00000000"
binary_data = binascii.unhexlify(hex_stream)

# Parse the Ethernet frame
eth_packet = dpkt.ethernet.Ethernet(binary_data)

# Extract Ethernet header components
destination_mac = ":".join(f"{b:02X}" for b in eth_packet.dst)
source_mac = ":".join(f"{b:02X}" for b in eth_packet.src)
ethertype = eth_packet.type

# Display the structural summary
print("Ethernet Frame Summary:")
print(f"Destination MAC: {destination_mac}")
print(f"Source MAC: {source_mac}")
print(f"Ethernet Type: 0x{ethertype:04X}")

# Depending on the Ethernet type, you can add conditions to handle specific encapsulated protocols.
